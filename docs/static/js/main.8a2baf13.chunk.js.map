{"version":3,"sources":["helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/AddCategory.js","GifExpertApp.js","index.js"],"names":["getGifs","category","a","fetch","encodeURI","resp","json","data","gifs","map","imagen","id","title","url","images","original","GifGridItem","className","src","alt","GifGrid","useState","loading","state","setstate","useEffect","then","imgs","useFetchGifs","AddCategory","setCategories","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","prototype","PropTypes","func","isRequired","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4MACaA,EAAO,uCAAI,WAAMC,GAAN,qBAAAC,EAAA,4DAEL,mCAFK,SAGDC,MAAM,kDAAD,OAAmDC,UAAUH,GAA7D,oBADT,qCAFK,cAGdI,EAHc,gBAKCA,EAAKC,OALN,uBAKbC,EALa,EAKbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAU,IAAD,EAC5B,MAAM,CACFC,GAAGD,EAAOC,GACVC,MAAMF,EAAOE,MACbC,IAAG,UAACH,EAAOI,cAAR,aAAC,EAAeC,SAASF,QAXhB,kBAgBbL,GAhBa,4CAAJ,sD,OCCPQ,EAAc,SAAC,GAAc,IAAbN,EAAY,EAAZA,OAEzB,OACI,sBAAKO,UAAU,yCAAf,UAEI,qBAAKC,IAAOR,EAAOG,IACfM,IAAKT,EAAOE,QACZ,4BAAIF,EAAOE,YCLdQ,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECJwB,SAACA,GAEzB,MAA0BoB,mBAAS,CAACd,KAAK,GACzCe,SAAQ,IADR,mBAAOC,EAAP,KAAcC,EAAd,KAOA,OAJAC,qBAAU,WACDzB,EAAQC,GAAUyB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CAACjB,KAAKoB,EAAKL,SAAQ,SACjE,CAACrB,IAEGsB,EDLgBK,CAAa3B,GAA7BM,EAAP,EAAOA,KAAKe,EAAZ,EAAYA,QAEZ,OACI,qCACA,6BAAKrB,IACJqB,GAAW,mBAAGL,UAAU,wCAAb,wBACZ,qBAAKA,UAAW,YAAhB,SAEIV,EAAKE,KAAK,SAAAC,GAAM,OACZ,cAAC,EAAD,CAEIA,OAAUA,GADHA,EAAOC,a,OEdrBkB,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCT,mBAAS,IAA7C,mBAAOU,EAAP,KAAmBC,EAAnB,KAWA,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BP,EAAc,CAACC,IACfC,EAAc,MAIlB,SACI,uBACIM,KAAO,OACPC,MAASR,EACTS,SAfc,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,aAoB/BV,EAAYa,UAAY,CACpBZ,c,OAAea,EAAUC,KAAKC,YCpB3B,IAAMC,EAAe,WAExB,MAAoCzB,mBAAS,CAAC,gBAA9C,mBAAO0B,EAAP,KAAmBjB,EAAnB,KAEA,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAiBA,IAHlC,IAKI,6BAEIiB,EAAWtC,KAAI,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEKA,SAAUA,GADLA,Y,MCjB7B+C,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8a2baf13.chunk.js","sourcesContent":["\r\nexport const getGifs  = async(category) =>{\r\n\r\n    const apiKey = 'KKTCZmY4kBn5zXy8XgReLMr2ZtWuQlqu';\r\n    const resp = await fetch(`http://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=${apiKey}`);\r\n    \r\n    const {data} = await resp.json();\r\n  \r\n    const gifs = data.map( imagen =>{\r\n        return{\r\n            id:imagen.id,\r\n            title:imagen.title,\r\n            url:imagen.images?.original.url\r\n        }\r\n    })\r\n\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({imagen}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            \r\n            <img src = {imagen.url} \r\n                alt={imagen.title}></img>\r\n                <p>{imagen.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n   \r\n \r\n    const {data,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading && <p className=\"animate__animated animate__rubberBand\">Loading...</p>}\r\n        <div className =\"card-grid\">\r\n           {               \r\n            data.map( imagen => (\r\n                <GifGridItem\r\n                    key = {imagen.id}\r\n                    imagen = {imagen}/>\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({data:[],\r\n    loading:true});\r\n\r\n    useEffect(() => {\r\n             getGifs(category).then(imgs => setstate({data:imgs,loading:false}));\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    const HandleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n    const HandleSumbit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories([inputValue]);\r\n            setinputValue('');\r\n        }\r\n     }\r\n    return (\r\n        <form onSubmit={HandleSumbit}>\r\n            <input\r\n                type = \"text\"\r\n                value = {inputValue}\r\n                onChange = {HandleInputChange}\r\n            ></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React, { useState } from 'react'\r\nimport { GifGrid } from './components/GifGrid';\r\nimport { AddCategory } from './components/AddCategory';\r\n\r\n\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon ball']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr></hr>\r\n            <AddCategory setCategories = {setCategories}/>,\r\n            {/* //<button onClick = {handleAdd}>Agregar</button> */}\r\n            <ol>\r\n            {\r\n                categories.map(category =>(\r\n                   <GifGrid \r\n                        key={category}\r\n                        category={category}/>\r\n                ))\r\n            }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}